DOCDIR ?= .
RESOURCES ?= ../resources

AB = ../bin/argbash
AB_INIT = ../bin/argbash-init

# example exclusively in index.rst
INDEX_SCRIPT = script.sh
MINIMAL_INIT_TPL = $(RESOURCES)/examples/minimal-raw.m4
MINIMAL_INIT_CREATE = minimal.m4
MINIMAL_INIT_POST = $(RESOURCES)/examples/minimal.m4
MINIMAL_SCRIPT = $(RESOURCES)/examples/minimal.sh
SIMPLE = $(RESOURCES)/examples/simple.sh
WRAPPER = $(RESOURCES)/examples/simple-wrapper.sh

STATICDIR = _static

NUL =

PIECES = \
	$(STATICDIR)/argbash-version.txt \
	$(STATICDIR)/index_script-create.txt \
	$(STATICDIR)/index_script-help.txt \
	$(STATICDIR)/index_script-output.txt \
	$(STATICDIR)/minimal_argbash-create.txt \
	$(STATICDIR)/minimal_init-create.txt \
	$(STATICDIR)/minimal_init-output.txt \
	$(STATICDIR)/minimal-output-help.txt \
	$(STATICDIR)/minimal-output-foobar.txt \
	$(STATICDIR)/minimal-output-noverbose.txt \
	$(STATICDIR)/simple-output-help.txt \
	$(STATICDIR)/wrapper-output-help.txt \
	$(STATICDIR)/wrapper-output-action.txt \
	$(NUL)

pieces: $(PIECES)

define CMD_OUT
	echo "$< $(FLAGS)" | sed -e 's/^\.\.\///' > $@
	echo >> $@
	$< $(FLAGS) >> $@
endef

define CMD_OUT_LOCAL
	echo "./$< $(FLAGS)" > $@
	echo >> $@
	./$< $(FLAGS) >> $@
endef

$(STATICDIR)/argbash-version.txt:
	$(AB) --version > "$@"

A_INIT_ARGS = --pos positional-arg --opt option --opt-bool print

$(STATICDIR)/minimal_init-create.txt: $(AB_INIT)
	$(eval FLAGS := $(A_INIT_ARGS) $(MINIMAL_INIT_CREATE))
	$(CMD_OUT)

$(STATICDIR)/index_script-create.txt: $(AB_INIT) $(INDEX_SCRIPT)
	$(eval FLAGS := $(A_INIT_ARGS) - | $(AB) -o $(INDEX_SCRIPT) -)
	$(CMD_OUT)

$(STATICDIR)/index_script-help.txt: $(INDEX_SCRIPT)
	$(eval FLAGS := -h)
	$(CMD_OUT_LOCAL)

$(STATICDIR)/index_script-output.txt: $(INDEX_SCRIPT)
	$(eval FLAGS := --print --option opt-value pos-value)
	$(CMD_OUT_LOCAL)

$(INDEX_SCRIPT):
	$(AB_INIT) $(A_INIT_ARGS) - | $(AB) -o $@ -

$(MINIMAL_INIT_TPL): $(AB_INIT)
	$(AB_INIT) $(A_INIT_ARGS) $@

$(MINIMAL_INIT_POST): $(MINIMAL_INIT_TPL) $(PWD)/_static/minimal.patch
	cat $(word 2,$^) | sed -e 's/@VERSION@/$(shell cat ../src/version)/' | patch -d $(dir $@) -o $(notdir $@) $(notdir $<)

# We enable the comments-in mode for the minimal script, so they are can be observed in the documentation
$(MINIMAL_SCRIPT): $(MINIMAL_INIT_POST) $(AB)
	$(AB) -c $< -o $@

$(STATICDIR)/minimal_argbash-create.txt: $(AB) $(MINIMAL_INIT_POST)
	$(eval FLAGS := -o $(MINIMAL_SCRIPT) $(MINIMAL_INIT_POST))
	$(CMD_OUT_LOCAL)

$(STATICDIR)/minimal_init-output.txt: $(MINIMAL_SCRIPT)
	$(eval FLAGS := --option value1 --print value0)
	$(CMD_OUT_LOCAL)

$(STATICDIR)/minimal-output-help.txt: $(MINIMAL_SCRIPT)
	$(eval FLAGS := -h)
	$(CMD_OUT)

$(STATICDIR)/minimal-output-foobar.txt: $(MINIMAL_SCRIPT)
	$(eval FLAGS := foo -o bar --print)
	$(CMD_OUT)

$(STATICDIR)/minimal-output-noverbose.txt: $(MINIMAL_SCRIPT)
	$(eval FLAGS := foo -o bar)
	$(CMD_OUT)

$(STATICDIR)/simple-output-help.txt: $(SIMPLE)
	$(eval FLAGS := -h)
	$(CMD_OUT)

$(STATICDIR)/wrapper-output-help.txt: $(WRAPPER)
	$(eval FLAGS := -h)
	$(CMD_OUT)

$(STATICDIR)/wrapper-output-action.txt: $(WRAPPER)
	$(eval FLAGS := --glob '*.m4' ../src ../resources/examples -u k)
	$(CMD_OUT)

clean-pieces: clean-tmp
	$(RM) $(PIECES)

clean-tmp:
	$(RM) $(MINIMAL_SCRIPT) $(INDEX_SCRIPT) $(MINIMAL_INIT_CREATE)
